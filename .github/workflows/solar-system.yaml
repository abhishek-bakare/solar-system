name: Solal system workflow
on:
    workflow_dispatch: 
    push:            
        branches: 
            - main
            - 'feature/*'       

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}               
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: This is unit testing
        strategy:
            matrix:
                nodejs_versions: [18, 20]
                os: [ubuntu-latest, macos-latest]
                exclude:
                    - nodejs_versions: 18
                      os: macos-latest

        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4 
              
            - name: Setup NodeJs-${{ matrix.nodejs_versions }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs_versions }}
            
            - name: Cache dependencies
              uses: actions/cache@v4
              with: 
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}  
                #the key required to create & store the cache & identify it. We use hashFiles for package-lock file so everytime when we change the package.json new lock file is created, based on that new cache key will created.
            
            - name: Install dependencies
              run: npm install
              
            - name: Unit testing
              id: unit-testing-cmd              # we can create & use this id as a conditions or logics in other steps   
              run: npm test

            - name: Upload a file               # upload test cases file
              uses: actions/upload-artifact@v3
              # always run this step if earlier step is failure or success
              if: always()                      
              with:
                name: test-result
                path: test-results.xml

    code-coverage:
      name: This is code coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout 
          uses: actions/checkout@v4

        - name: Install nodejs
          uses: actions/setup-node@v3
          with:
            nodejs_versions: 18

        - name: Cache dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}    
            
        - name: Install dependencies
          run: npm install
          
        - name: Run coverage
          continue-on-error: true  
          run: npm run coverage
          
        - name: Archive coverage reports
          uses: actions/upload-artifact@v4  
          with:
            name: coverage-report
            path: coverage
            retention-days: 5       # retention period of 5 days 



